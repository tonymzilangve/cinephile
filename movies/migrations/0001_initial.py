# Generated by Django 4.1.5 on 2023-04-05 04:39

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Award')),
            ],
            options={
                'verbose_name': 'Award',
                'verbose_name_plural': 'Awards',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category')),
                ('desc', models.TextField(max_length=1000, verbose_name='Description')),
                ('url', models.SlugField(max_length=150, unique=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Critic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Critic')),
            ],
            options={
                'verbose_name': 'Critic',
                'verbose_name_plural': 'Critics',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Movie')),
                ('genre', models.CharField(blank=True, choices=[('Action', 'action'), ('Musical', 'musical')], max_length=30, null=True, verbose_name='Genre')),
                ('release_date', models.DateField(default=datetime.date.today, verbose_name='Premier')),
                ('duration', models.DurationField()),
                ('poster', models.ImageField(blank=True, null=True, upload_to='<django.db.models.fields.CharField>/posters/', verbose_name='Poster')),
                ('budget', models.PositiveIntegerField(blank=True, null=True)),
                ('box_office', models.PositiveIntegerField(blank=True, null=True)),
                ('tagline', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tagline')),
                ('summary', models.TextField(max_length=2000, verbose_name='Summary')),
                ('studio', models.CharField(blank=True, max_length=100, null=True, verbose_name='Studio')),
                ('country', django_countries.fields.CountryField(max_length=746, multiple=True, verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Movie',
                'verbose_name_plural': 'Movies',
                'ordering': ['-release_date'],
            },
        ),
        migrations.CreateModel(
            name='SecondaryCast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('Script_writer', 'script_writer'), ('Operator', 'operator'), ('Composer', 'composer')], max_length=50, verbose_name='Role')),
                ('name', models.CharField(max_length=50, verbose_name='Director')),
                ('gender', models.CharField(choices=[('Male', 'male'), ('Female', 'female')], max_length=10, verbose_name='Gender')),
                ('citizenship', django_countries.fields.CountryField(max_length=746, multiple=True, verbose_name='Country')),
                ('awards', models.ManyToManyField(blank=True, to='movies.award', verbose_name='Awards')),
            ],
            options={
                'verbose_name': 'Other Role',
                'verbose_name_plural': 'Other Roles',
                'ordering': ['role'],
            },
        ),
        migrations.CreateModel(
            name='PrimaryCast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('Actor', 'actor'), ('Director', 'director')], max_length=50, verbose_name='Role')),
                ('gender', models.CharField(choices=[('Male', 'male'), ('Female', 'female')], max_length=10, verbose_name='Gender')),
                ('birthday', models.DateField(verbose_name='Born')),
                ('citizenship', django_countries.fields.CountryField(max_length=746, multiple=True, verbose_name='Country')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='static/actors_and_directors/', verbose_name='Photo')),
                ('bio', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Bio')),
                ('awards', models.ManyToManyField(blank=True, to='movies.award', verbose_name='Awards')),
            ],
            options={
                'verbose_name': 'Actor / Director',
                'verbose_name_plural': 'Actors / Directors',
                'ordering': ['role'],
            },
        ),
        migrations.CreateModel(
            name='MovieShot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.CharField(max_length=100, verbose_name='Description')),
                ('shot', models.ImageField(upload_to='<django.db.models.fields.related.ForeignKey>/shots', verbose_name='Shot')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shots', to='movies.movie', verbose_name='Movie')),
            ],
            options={
                'verbose_name': 'Shot',
                'verbose_name_plural': 'Shots',
                'ordering': ['movie'],
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='actors',
            field=models.ManyToManyField(related_name='film_actor', to='movies.primarycast', verbose_name='Actors'),
        ),
        migrations.AddField(
            model_name='movie',
            name='awards',
            field=models.ManyToManyField(blank=True, to='movies.award', verbose_name='Awards'),
        ),
        migrations.AddField(
            model_name='movie',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='movies.category', verbose_name='Cat'),
        ),
        migrations.AddField(
            model_name='movie',
            name='composer',
            field=models.ManyToManyField(blank=True, related_name='film_composer', to='movies.secondarycast', verbose_name='Composer'),
        ),
        migrations.AddField(
            model_name='movie',
            name='director',
            field=models.ManyToManyField(related_name='film_director', to='movies.primarycast', verbose_name='Director'),
        ),
        migrations.AddField(
            model_name='movie',
            name='operator',
            field=models.ManyToManyField(blank=True, related_name='film_operator', to='movies.secondarycast', verbose_name='Operator'),
        ),
        migrations.AddField(
            model_name='movie',
            name='script',
            field=models.ManyToManyField(blank=True, related_name='film_script_writer', to='movies.secondarycast', verbose_name='Script'),
        ),
    ]
